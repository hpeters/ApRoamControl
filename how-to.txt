First your Openwrt access points will need to have the following installed.

hostapd-utils
nc  a recompiled version of busybox with nc server support (or the full version of busybox?) or netcat
renice  either a recompiled version of busybox with renice support (or the full version of busybox?)
# If you dont care about setting the process priority you can just comment out the lines with renice in them.
tcpdump or tcpdump-mini

If your /tmp directory is not mounted using tmpfs then you should change any references to the /tmp directory to a directory that is mounted
using tmpfs this will improve performance and reduce drive wear.
You should alsow change any ip addresses to what you are using.

On the Openwrt access points:

Create the directory /usr/local/bin
Copy ApRoamChkMon/ApRoamChkMon to /usr/local/bin/
Copy ApRoamClient/ApRoamClient to /usr/local/bin/
Copy ApRoamDeauth/ApRoamDeauth to /usr/local/bin/
Copy ApRoamSta/openwrt/ApRoamSta to /usr/local/bin/
Copy ApRoamSur/openwrt/ApRoamSur to /usr/local/bin/
# If using included precompiled busybox binary.
Copy Busybox/busybox /usr/local/bin/ (MIPS processor only)

Copy etc/init.d/openwrt/ApRoamChkMon /etc/init.d/
Copy etc/init.d/openwrt/ApRoamClient /etc/init.d/
Copy etc/init.d/openwrt/ApRoamDeauth /etc/init.d/
Copy etc/init.d/openwrt/ApRoamSta /etc/init.d/
Copy etc/init.d/openwrt/ApRoamSur /etc/init.d/

Adjust the ports and addresses in ApRoamSta and ApRoamSur for each access point if necessary.

You will need to modify the /lib/netifd/hostapd.sh file.
First back it up cp /lib/netifd/hostapd.sh /lib/netifd/hostapd.sh.orig
The add this below line number 73.
# Extra options.
append base_cfg "ap_max_inactivity=5" "$N"

original:
hostapd_prepare_device_config() {
        local config="$1"
        local driver="$2"

        local base="${config%%.conf}"
        local base_cfg=

        json_get_vars country country_ie beacon_int doth require_mode

        hostapd_set_log_options base_cfg

        set_default country_ie 1
        set_default doth 1

        [ -n "$country" ] && {
                append base_cfg "country_code=$country" "$N"

                [ "$country_ie" -gt 0 ] && append base_cfg "ieee80211d=1" "$N"
                [ "$hwmode" = "a" -a "$doth" -gt 0 ] && append base_cfg "ieee80211h=1" "$N"
        }
        [ -n "$hwmode" ] && append base_cfg "hw_mode=$hwmode" "$N"

modified:
hostapd_prepare_device_config() {
        local config="$1"
        local driver="$2"

        local base="${config%%.conf}"
        local base_cfg=

        json_get_vars country country_ie beacon_int doth require_mode

        hostapd_set_log_options base_cfg

        set_default country_ie 1
        set_default doth 1
	# Extra options.
	append base_cfg "ap_max_inactivity=5" "$N"

        [ -n "$country" ] && {
                append base_cfg "country_code=$country" "$N"

                [ "$country_ie" -gt 0 ] && append base_cfg "ieee80211d=1" "$N"
                [ "$hwmode" = "a" -a "$doth" -gt 0 ] && append base_cfg "ieee80211h=1" "$N"
        }
        [ -n "$hwmode" ] && append base_cfg "hw_mode=$hwmode" "$N"

This will allow for the access point to report accurately the currently active stations.
Otherwise by default it will report stations even if they have been disconnected for five minutes.

On the Server ( ApRoamControl machine ):

Dependencies:
bash
fping

Create the directory /usr/local/bin
Copy ApRoamControl/ApRoamControl /usr/local/bin/
# You might want to change the log path in the script to something else. (/tmp/ApRoamControl.log /var/log/ApRoamControl.log etc)

Copy etc/logrotate.d/ApRoamControl /etc/logrotate.d/
# Change the log path to what you set in ApRoamControl.

Copy ApRoamSrv/ApRoamSrv /usr/local/bin/
Copy ApRoamSta/ApRoamSta /usr/local/bin/
Copy ApRoamSur/ApRoamSur /usr/local/bin/

# Copy over init.d script.
Copy etc/init.d/server/ApRoamControl /etc/init.d/

Make sure the aprdir matches what is used in the Main (/usr/local/bin) ApRoamControl script.

